"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/p-throttle";
exports.ids = ["vendor-chunks/p-throttle"];
exports.modules = {

/***/ "(rsc)/./node_modules/p-throttle/index.js":
/*!******************************************!*\
  !*** ./node_modules/p-throttle/index.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbortError: () => (/* binding */ AbortError),\n/* harmony export */   \"default\": () => (/* binding */ pThrottle)\n/* harmony export */ });\nclass AbortError extends Error {\n\tconstructor() {\n\t\tsuper('Throttled function aborted');\n\t\tthis.name = 'AbortError';\n\t}\n}\n\nfunction pThrottle({limit, interval, strict, onDelay}) {\n\tif (!Number.isFinite(limit)) {\n\t\tthrow new TypeError('Expected `limit` to be a finite number');\n\t}\n\n\tif (!Number.isFinite(interval)) {\n\t\tthrow new TypeError('Expected `interval` to be a finite number');\n\t}\n\n\tconst queue = new Map();\n\n\tlet currentTick = 0;\n\tlet activeCount = 0;\n\n\tfunction windowedDelay() {\n\t\tconst now = Date.now();\n\n\t\tif ((now - currentTick) > interval) {\n\t\t\tactiveCount = 1;\n\t\t\tcurrentTick = now;\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (activeCount < limit) {\n\t\t\tactiveCount++;\n\t\t} else {\n\t\t\tcurrentTick += interval;\n\t\t\tactiveCount = 1;\n\t\t}\n\n\t\treturn currentTick - now;\n\t}\n\n\tconst strictTicks = [];\n\n\tfunction strictDelay() {\n\t\tconst now = Date.now();\n\n\t\t// Clear the queue if there's a significant delay since the last execution\n\t\tif (strictTicks.length > 0 && now - strictTicks.at(-1) > interval) {\n\t\t\tstrictTicks.length = 0;\n\t\t}\n\n\t\t// If the queue is not full, add the current time and execute immediately\n\t\tif (strictTicks.length < limit) {\n\t\t\tstrictTicks.push(now);\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Calculate the next execution time based on the first item in the queue\n\t\tconst nextExecutionTime = strictTicks[0] + interval;\n\n\t\t// Shift the queue and add the new execution time\n\t\tstrictTicks.shift();\n\t\tstrictTicks.push(nextExecutionTime);\n\n\t\t// Calculate the delay for the current execution\n\t\treturn Math.max(0, nextExecutionTime - now);\n\t}\n\n\tconst getDelay = strict ? strictDelay : windowedDelay;\n\n\treturn function_ => {\n\t\tconst throttled = function (...arguments_) {\n\t\t\tif (!throttled.isEnabled) {\n\t\t\t\treturn (async () => function_.apply(this, arguments_))();\n\t\t\t}\n\n\t\t\tlet timeoutId;\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tconst execute = () => {\n\t\t\t\t\tresolve(function_.apply(this, arguments_));\n\t\t\t\t\tqueue.delete(timeoutId);\n\t\t\t\t};\n\n\t\t\t\tconst delay = getDelay();\n\t\t\t\tif (delay > 0) {\n\t\t\t\t\ttimeoutId = setTimeout(execute, delay);\n\t\t\t\t\tqueue.set(timeoutId, reject);\n\t\t\t\t\tonDelay?.(...arguments_);\n\t\t\t\t} else {\n\t\t\t\t\texecute();\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tthrottled.abort = () => {\n\t\t\tfor (const timeout of queue.keys()) {\n\t\t\t\tclearTimeout(timeout);\n\t\t\t\tqueue.get(timeout)(new AbortError());\n\t\t\t}\n\n\t\t\tqueue.clear();\n\t\t\tstrictTicks.splice(0, strictTicks.length);\n\t\t};\n\n\t\tthrottled.isEnabled = true;\n\n\t\tObject.defineProperty(throttled, 'queueSize', {\n\t\t\tget() {\n\t\t\t\treturn queue.size;\n\t\t\t},\n\t\t});\n\n\t\treturn throttled;\n\t};\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcC10aHJvdHRsZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFZSxvQkFBb0IsaUNBQWlDO0FBQ3BFO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLElBQUk7QUFDSjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osR0FBRzs7QUFFSDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jb250ZW50ZnVsLWxhbmRpbmctcGFnZS1idWlsZGVyLy4vbm9kZV9tb2R1bGVzL3AtdGhyb3R0bGUvaW5kZXguanM/NDAwZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgQWJvcnRFcnJvciBleHRlbmRzIEVycm9yIHtcblx0Y29uc3RydWN0b3IoKSB7XG5cdFx0c3VwZXIoJ1Rocm90dGxlZCBmdW5jdGlvbiBhYm9ydGVkJyk7XG5cdFx0dGhpcy5uYW1lID0gJ0Fib3J0RXJyb3InO1xuXHR9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHBUaHJvdHRsZSh7bGltaXQsIGludGVydmFsLCBzdHJpY3QsIG9uRGVsYXl9KSB7XG5cdGlmICghTnVtYmVyLmlzRmluaXRlKGxpbWl0KSkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIGBsaW1pdGAgdG8gYmUgYSBmaW5pdGUgbnVtYmVyJyk7XG5cdH1cblxuXHRpZiAoIU51bWJlci5pc0Zpbml0ZShpbnRlcnZhbCkpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBgaW50ZXJ2YWxgIHRvIGJlIGEgZmluaXRlIG51bWJlcicpO1xuXHR9XG5cblx0Y29uc3QgcXVldWUgPSBuZXcgTWFwKCk7XG5cblx0bGV0IGN1cnJlbnRUaWNrID0gMDtcblx0bGV0IGFjdGl2ZUNvdW50ID0gMDtcblxuXHRmdW5jdGlvbiB3aW5kb3dlZERlbGF5KCkge1xuXHRcdGNvbnN0IG5vdyA9IERhdGUubm93KCk7XG5cblx0XHRpZiAoKG5vdyAtIGN1cnJlbnRUaWNrKSA+IGludGVydmFsKSB7XG5cdFx0XHRhY3RpdmVDb3VudCA9IDE7XG5cdFx0XHRjdXJyZW50VGljayA9IG5vdztcblx0XHRcdHJldHVybiAwO1xuXHRcdH1cblxuXHRcdGlmIChhY3RpdmVDb3VudCA8IGxpbWl0KSB7XG5cdFx0XHRhY3RpdmVDb3VudCsrO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRjdXJyZW50VGljayArPSBpbnRlcnZhbDtcblx0XHRcdGFjdGl2ZUNvdW50ID0gMTtcblx0XHR9XG5cblx0XHRyZXR1cm4gY3VycmVudFRpY2sgLSBub3c7XG5cdH1cblxuXHRjb25zdCBzdHJpY3RUaWNrcyA9IFtdO1xuXG5cdGZ1bmN0aW9uIHN0cmljdERlbGF5KCkge1xuXHRcdGNvbnN0IG5vdyA9IERhdGUubm93KCk7XG5cblx0XHQvLyBDbGVhciB0aGUgcXVldWUgaWYgdGhlcmUncyBhIHNpZ25pZmljYW50IGRlbGF5IHNpbmNlIHRoZSBsYXN0IGV4ZWN1dGlvblxuXHRcdGlmIChzdHJpY3RUaWNrcy5sZW5ndGggPiAwICYmIG5vdyAtIHN0cmljdFRpY2tzLmF0KC0xKSA+IGludGVydmFsKSB7XG5cdFx0XHRzdHJpY3RUaWNrcy5sZW5ndGggPSAwO1xuXHRcdH1cblxuXHRcdC8vIElmIHRoZSBxdWV1ZSBpcyBub3QgZnVsbCwgYWRkIHRoZSBjdXJyZW50IHRpbWUgYW5kIGV4ZWN1dGUgaW1tZWRpYXRlbHlcblx0XHRpZiAoc3RyaWN0VGlja3MubGVuZ3RoIDwgbGltaXQpIHtcblx0XHRcdHN0cmljdFRpY2tzLnB1c2gobm93KTtcblx0XHRcdHJldHVybiAwO1xuXHRcdH1cblxuXHRcdC8vIENhbGN1bGF0ZSB0aGUgbmV4dCBleGVjdXRpb24gdGltZSBiYXNlZCBvbiB0aGUgZmlyc3QgaXRlbSBpbiB0aGUgcXVldWVcblx0XHRjb25zdCBuZXh0RXhlY3V0aW9uVGltZSA9IHN0cmljdFRpY2tzWzBdICsgaW50ZXJ2YWw7XG5cblx0XHQvLyBTaGlmdCB0aGUgcXVldWUgYW5kIGFkZCB0aGUgbmV3IGV4ZWN1dGlvbiB0aW1lXG5cdFx0c3RyaWN0VGlja3Muc2hpZnQoKTtcblx0XHRzdHJpY3RUaWNrcy5wdXNoKG5leHRFeGVjdXRpb25UaW1lKTtcblxuXHRcdC8vIENhbGN1bGF0ZSB0aGUgZGVsYXkgZm9yIHRoZSBjdXJyZW50IGV4ZWN1dGlvblxuXHRcdHJldHVybiBNYXRoLm1heCgwLCBuZXh0RXhlY3V0aW9uVGltZSAtIG5vdyk7XG5cdH1cblxuXHRjb25zdCBnZXREZWxheSA9IHN0cmljdCA/IHN0cmljdERlbGF5IDogd2luZG93ZWREZWxheTtcblxuXHRyZXR1cm4gZnVuY3Rpb25fID0+IHtcblx0XHRjb25zdCB0aHJvdHRsZWQgPSBmdW5jdGlvbiAoLi4uYXJndW1lbnRzXykge1xuXHRcdFx0aWYgKCF0aHJvdHRsZWQuaXNFbmFibGVkKSB7XG5cdFx0XHRcdHJldHVybiAoYXN5bmMgKCkgPT4gZnVuY3Rpb25fLmFwcGx5KHRoaXMsIGFyZ3VtZW50c18pKSgpO1xuXHRcdFx0fVxuXG5cdFx0XHRsZXQgdGltZW91dElkO1xuXHRcdFx0cmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcblx0XHRcdFx0Y29uc3QgZXhlY3V0ZSA9ICgpID0+IHtcblx0XHRcdFx0XHRyZXNvbHZlKGZ1bmN0aW9uXy5hcHBseSh0aGlzLCBhcmd1bWVudHNfKSk7XG5cdFx0XHRcdFx0cXVldWUuZGVsZXRlKHRpbWVvdXRJZCk7XG5cdFx0XHRcdH07XG5cblx0XHRcdFx0Y29uc3QgZGVsYXkgPSBnZXREZWxheSgpO1xuXHRcdFx0XHRpZiAoZGVsYXkgPiAwKSB7XG5cdFx0XHRcdFx0dGltZW91dElkID0gc2V0VGltZW91dChleGVjdXRlLCBkZWxheSk7XG5cdFx0XHRcdFx0cXVldWUuc2V0KHRpbWVvdXRJZCwgcmVqZWN0KTtcblx0XHRcdFx0XHRvbkRlbGF5Py4oLi4uYXJndW1lbnRzXyk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0ZXhlY3V0ZSgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0XHR9O1xuXG5cdFx0dGhyb3R0bGVkLmFib3J0ID0gKCkgPT4ge1xuXHRcdFx0Zm9yIChjb25zdCB0aW1lb3V0IG9mIHF1ZXVlLmtleXMoKSkge1xuXHRcdFx0XHRjbGVhclRpbWVvdXQodGltZW91dCk7XG5cdFx0XHRcdHF1ZXVlLmdldCh0aW1lb3V0KShuZXcgQWJvcnRFcnJvcigpKTtcblx0XHRcdH1cblxuXHRcdFx0cXVldWUuY2xlYXIoKTtcblx0XHRcdHN0cmljdFRpY2tzLnNwbGljZSgwLCBzdHJpY3RUaWNrcy5sZW5ndGgpO1xuXHRcdH07XG5cblx0XHR0aHJvdHRsZWQuaXNFbmFibGVkID0gdHJ1ZTtcblxuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aHJvdHRsZWQsICdxdWV1ZVNpemUnLCB7XG5cdFx0XHRnZXQoKSB7XG5cdFx0XHRcdHJldHVybiBxdWV1ZS5zaXplO1xuXHRcdFx0fSxcblx0XHR9KTtcblxuXHRcdHJldHVybiB0aHJvdHRsZWQ7XG5cdH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/p-throttle/index.js\n");

/***/ })

};
;