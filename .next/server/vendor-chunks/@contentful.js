"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@contentful";
exports.ids = ["vendor-chunks/@contentful"];
exports.modules = {

/***/ "(rsc)/./node_modules/@contentful/content-source-maps/dist/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@contentful/content-source-maps/dist/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SUPPORTED_WIDGETS: () => (/* binding */ ce),\n/* harmony export */   clone: () => (/* binding */ Q),\n/* harmony export */   combine: () => (/* binding */ w),\n/* harmony export */   createSourceMapMetadata: () => (/* binding */ C),\n/* harmony export */   decode: () => (/* binding */ ae),\n/* harmony export */   encode: () => (/* binding */ ie),\n/* harmony export */   encodeCPAResponse: () => (/* binding */ le),\n/* harmony export */   encodeField: () => (/* binding */ P),\n/* harmony export */   encodeGraphQLResponse: () => (/* binding */ fe),\n/* harmony export */   encodeRichTextValue: () => (/* binding */ oe),\n/* harmony export */   isBuiltinNamespace: () => (/* binding */ B),\n/* harmony export */   isSupportedWidget: () => (/* binding */ D),\n/* harmony export */   splitEncoding: () => (/* binding */ ue)\n/* harmony export */ });\nvar W = { 0: 8203, 1: 8204, 2: 8205, 3: 8290, 4: 8291, 5: 8288, 6: 65279, 7: 8289, 8: 119155, 9: 119156, a: 119157, b: 119158, c: 119159, d: 119160, e: 119161, f: 119162 }, L = { 0: 8203, 1: 8204, 2: 8205, 3: 65279 }, j = new Array(4).fill(String.fromCodePoint(L[0])).join(\"\"), V = \"\\0\";\nfunction U(t) {\n  let n = JSON.stringify(t);\n  return `${j}${Array.from(n).map((o) => {\n    let e = o.charCodeAt(0);\n    if (e > 255) throw new Error(`Only ASCII edit info can be encoded. Error attempting to encode ${n} on character ${o} (${e})`);\n    return Array.from(e.toString(4).padStart(4, \"0\")).map((r) => String.fromCodePoint(L[r])).join(\"\");\n  }).join(\"\")}`;\n}\nfunction Z(t) {\n  return !Number.isNaN(Number(t)) || /[a-z]/i.test(t) && !/\\d+(?:[-:\\/]\\d+){2}(?:T\\d+(?:[-:\\/]\\d+){1,2}(\\.\\d+)?Z?)?/.test(t) ? !1 : !!Date.parse(t);\n}\nfunction q(t) {\n  try {\n    new URL(t, t.startsWith(\"/\") ? \"https://acme.com\" : void 0);\n  } catch (n) {\n    return !1;\n  }\n  return !0;\n}\nfunction G(t, n, o = \"auto\") {\n  return o === !0 || o === \"auto\" && (Z(t) || q(t)) ? t : `${t}${U(n)}`;\n}\nvar H = Object.fromEntries(Object.entries(L).map((t) => t.reverse())), F = Object.fromEntries(Object.entries(W).map((t) => t.reverse())), K = `${Object.values(W).map((t) => `\\\\u{${t.toString(16)}}`).join(\"\")}`, O = new RegExp(`[${K}]{4,}`, \"gu\");\nfunction X(t) {\n  let n = t.match(O);\n  if (n) return Y(n[0], !0)[0];\n}\nfunction Y(t, n = !1) {\n  let o = Array.from(t);\n  if (o.length % 2 === 0) {\n    if (o.length % 4 || !t.startsWith(j)) return ee(o, n);\n  } else throw new Error(\"Encoded data has invalid length\");\n  let e = [];\n  for (let r = o.length * 0.25; r--; ) {\n    let s = o.slice(r * 4, r * 4 + 4).map((c) => H[c.codePointAt(0)]).join(\"\");\n    e.unshift(String.fromCharCode(parseInt(s, 4)));\n  }\n  if (n) {\n    e.shift();\n    let r = e.indexOf(V);\n    return r === -1 && (r = e.length), [JSON.parse(e.slice(0, r).join(\"\"))];\n  }\n  return e.join(\"\").split(V).filter(Boolean).map((r) => JSON.parse(r));\n}\nfunction ee(t, n) {\n  var o;\n  let e = [];\n  for (let i = t.length * 0.5; i--; ) {\n    let u = `${F[t[i * 2].codePointAt(0)]}${F[t[i * 2 + 1].codePointAt(0)]}`;\n    e.unshift(String.fromCharCode(parseInt(u, 16)));\n  }\n  let r = [], s = [e.join(\"\")], c = 10;\n  for (; s.length; ) {\n    let i = s.shift();\n    try {\n      if (r.push(JSON.parse(i)), n) return r;\n    } catch (u) {\n      if (!c--) throw u;\n      let a = +((o = u.message.match(/\\sposition\\s(\\d+)$/)) == null ? void 0 : o[1]);\n      if (!a) throw u;\n      s.unshift(i.substring(0, a), i.substring(a));\n    }\n  }\n  return r;\n}\nfunction te(t) {\n  var n;\n  return { cleaned: t.replace(O, \"\"), encoded: ((n = t.match(O)) == null ? void 0 : n[0]) || \"\" };\n}\nfunction w(t, n) {\n  return G(t, n);\n}\nfunction ie(t) {\n  return U(t);\n}\nfunction ae(t) {\n  return X(t);\n}\nfunction ue(t) {\n  return te(t);\n}\nvar x, k;\nfunction ne() {\n  if (k) return x;\n  k = 1;\n  var t = Object.prototype.hasOwnProperty, n = Object.prototype.toString;\n  return x = function(e, r, s) {\n    if (n.call(r) !== \"[object Function]\")\n      throw new TypeError(\"iterator must be a function\");\n    var c = e.length;\n    if (c === +c)\n      for (var i = 0; i < c; i++)\n        r.call(s, e[i], i, e);\n    else\n      for (var u in e)\n        t.call(e, u) && r.call(s, e[u], u, e);\n  }, x;\n}\nvar I, _;\nfunction re() {\n  if (_) return I;\n  _ = 1;\n  var t = ne();\n  I = n;\n  function n(o, e, r) {\n    if (arguments.length === 3)\n      return n.set(o, e, r);\n    if (arguments.length === 2)\n      return n.get(o, e);\n    var s = n.bind(n, o);\n    for (var c in n)\n      n.hasOwnProperty(c) && (s[c] = n[c].bind(s, o));\n    return s;\n  }\n  return n.get = function(e, r) {\n    for (var s = Array.isArray(r) ? r : n.parse(r), c = 0; c < s.length; ++c) {\n      var i = s[c];\n      if (!(typeof e == \"object\" && i in e))\n        throw new Error(\"Invalid reference token: \" + i);\n      e = e[i];\n    }\n    return e;\n  }, n.set = function(e, r, s) {\n    var c = Array.isArray(r) ? r : n.parse(r), i = c[0];\n    if (c.length === 0)\n      throw Error(\"Can not set the root object\");\n    for (var u = 0; u < c.length - 1; ++u) {\n      var a = c[u];\n      typeof a != \"string\" && typeof a != \"number\" && (a = String(a)), !(a === \"__proto__\" || a === \"constructor\" || a === \"prototype\") && (a === \"-\" && Array.isArray(e) && (a = e.length), i = c[u + 1], a in e || (i.match(/^(\\d+|-)$/) ? e[a] = [] : e[a] = {}), e = e[a]);\n    }\n    return i === \"-\" && Array.isArray(e) && (i = e.length), e[i] = s, this;\n  }, n.remove = function(o, e) {\n    var r = Array.isArray(e) ? e : n.parse(e), s = r[r.length - 1];\n    if (s === void 0)\n      throw new Error('Invalid JSON pointer for remove: \"' + e + '\"');\n    var c = n.get(o, r.slice(0, -1));\n    if (Array.isArray(c)) {\n      var i = +s;\n      if (s === \"\" && isNaN(i))\n        throw new Error('Invalid array index: \"' + s + '\"');\n      Array.prototype.splice.call(c, i, 1);\n    } else\n      delete c[s];\n  }, n.dict = function(e, r) {\n    var s = {};\n    return n.walk(e, function(c, i) {\n      s[i] = c;\n    }, r), s;\n  }, n.walk = function(e, r, s) {\n    var c = [];\n    s = s || function(i) {\n      var u = Object.prototype.toString.call(i);\n      return u === \"[object Object]\" || u === \"[object Array]\";\n    }, function i(u) {\n      t(u, function(a, l) {\n        c.push(String(l)), s(a) ? i(a) : r(a, n.compile(c)), c.pop();\n      });\n    }(e);\n  }, n.has = function(e, r) {\n    try {\n      n.get(e, r);\n    } catch (s) {\n      return !1;\n    }\n    return !0;\n  }, n.escape = function(e) {\n    return e.toString().replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n  }, n.unescape = function(e) {\n    return e.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n  }, n.parse = function(e) {\n    if (e === \"\")\n      return [];\n    if (e.charAt(0) !== \"/\")\n      throw new Error(\"Invalid JSON pointer: \" + e);\n    return e.substring(1).split(/\\//).map(n.unescape);\n  }, n.compile = function(e) {\n    return e.length === 0 ? \"\" : \"/\" + e.map(n.escape).join(\"/\");\n  }, I;\n}\nvar p = re();\nconst oe = ({\n  pointer: t,\n  mappings: n,\n  data: o,\n  hiddenStrings: e\n}) => {\n  const r = n[t];\n  if (r) {\n    delete n[t];\n    const s = b(o, t);\n    for (const c of s) {\n      n[c] = r;\n      const i = p.get(o, c), u = w(i, e);\n      p.set(o, c, u);\n    }\n  } else {\n    const s = b(o, t);\n    for (const c of s) {\n      const i = p.get(o, c), u = w(i, e);\n      p.set(o, c, u);\n    }\n  }\n};\nfunction se(t) {\n  return \"content\" in t && !!t.content;\n}\nconst b = (t, n = \"\") => {\n  const o = [], e = p.get(t, n);\n  if (se(e))\n    for (let r = 0; r < e.content.length; r++)\n      e.content[r].nodeType === \"text\" ? o.push(`${n}/content/${r}/value`) : o.push(...b(t, `${n}/content/${r}`));\n  return o;\n}, C = ({\n  entityId: t,\n  entityType: n,\n  space: o,\n  environment: e,\n  field: r,\n  locale: s,\n  editorInterface: c,\n  fieldType: i,\n  targetOrigin: u,\n  platform: a\n}) => {\n  const d = {\n    origin: \"contentful.com\",\n    href: `${`${u || \"https://app.contentful.com\"}/spaces/${o}/environments/${e}`}/${n === \"Entry\" ? \"entries\" : \"assets\"}/${t}/?focusedField=${r}&focusedLocale=${s}&source=vercel-content-link`,\n    contentful: {\n      editorInterface: c,\n      fieldType: i\n    }\n  };\n  return a === \"vercel\" && delete d.contentful, d;\n}, B = (t) => [\"builtin\", \"sidebar-builtin\", \"editor-builtin\"].includes(t), D = (t) => ce.includes(t);\nfunction Q(t) {\n  if (typeof structuredClone == \"function\")\n    return structuredClone(t);\n  try {\n    return JSON.parse(JSON.stringify(t));\n  } catch (n) {\n    return console.warn(\"Failed to clone data:\", t, n), t;\n  }\n}\nconst ce = [\n  \"singleLine\",\n  \"tagEditor\",\n  \"listInput\",\n  \"checkbox\",\n  \"richTextEditor\",\n  \"multipleLine\"\n];\nfunction P(t, n, o, e, r, s, c) {\n  const i = c ? n[c] : n;\n  switch (t) {\n    case \"Symbol\": {\n      const u = w(i, o);\n      p.set(e, r, u);\n      break;\n    }\n    case \"Text\": {\n      const u = w(i, o);\n      p.set(e, r, u);\n      break;\n    }\n    case \"RichText\": {\n      oe({\n        pointer: \"\",\n        mappings: s,\n        data: i,\n        hiddenStrings: o\n      });\n      break;\n    }\n    case \"Array\": {\n      const u = i.map((a) => typeof a == \"string\" ? w(a, o) : a);\n      p.set(e, r, u);\n      break;\n    }\n  }\n}\nconst fe = (t, n, o) => {\n  if (!t || !t.extensions || !t.extensions.contentSourceMaps)\n    return console.error(\n      \"GraphQL response does not contain Content Source Maps information.\",\n      t\n    ), t;\n  const e = Q(t), {\n    spaces: r,\n    environments: s,\n    editorInterfaces: c,\n    fields: i,\n    locales: u,\n    entries: a,\n    assets: l,\n    mappings: m,\n    fieldTypes: v\n  } = e.extensions.contentSourceMaps, y = e;\n  for (const d in m) {\n    const { source: f } = m[d], h = \"entry\" in f ? a[f.entry] : l[f.asset], M = \"entry\" in f ? \"Entry\" : \"Asset\";\n    if (!h)\n      return e;\n    const g = r[h.space], A = s[h.environment], E = h.id, S = i[f.field], T = u[f.locale], N = c[f.editorInterface], J = v[f.fieldType];\n    if (!(B(N.widgetNamespace) && !D(N.widgetId)) && p.has(y, d)) {\n      const R = p.get(y, d);\n      if (R !== null) {\n        const z = C({\n          entityId: E,\n          entityType: M,\n          space: g,\n          environment: A,\n          field: S,\n          locale: T,\n          editorInterface: N,\n          fieldType: J,\n          targetOrigin: n,\n          platform: o\n        });\n        P(J, R, z, y, d, m);\n      }\n    }\n  }\n  return e;\n}, $ = (t, n, o, e, r) => {\n  if (!t.fields)\n    return;\n  const { contentSourceMaps: s } = t.sys;\n  if (!s)\n    return;\n  const { mappings: c } = s;\n  for (const i in c) {\n    const { source: u } = c[i], a = t.sys.space.sys.id, l = t.sys.environment.sys.id, m = t.sys.id, v = t.sys.type, y = n[u.fieldType], d = o[u.editorInterface];\n    if (B(d.widgetNamespace) && !D(d.widgetId))\n      continue;\n    const f = i.startsWith(\"/\") ? i : `/${i}`;\n    if (p.has(t, f)) {\n      const h = p.get(t, f);\n      if (h === null)\n        return;\n      const g = f.split(\"/\").pop();\n      if (!g) {\n        console.error(\"Field name could not be extracted from the pointer\", f);\n        return;\n      }\n      const A = t.sys.locale;\n      if (A) {\n        const E = C({\n          entityId: m,\n          entityType: v,\n          space: a,\n          environment: l,\n          field: g,\n          locale: A,\n          editorInterface: d,\n          fieldType: y,\n          targetOrigin: e,\n          platform: r\n        });\n        P(y, h, E, t, f, c);\n      } else\n        Object.keys(h).forEach((S) => {\n          const T = C({\n            entityId: m,\n            entityType: v,\n            space: a,\n            environment: l,\n            field: g,\n            locale: S,\n            editorInterface: d,\n            fieldType: y,\n            targetOrigin: e,\n            platform: r\n          });\n          P(\n            y,\n            h,\n            T,\n            t,\n            `${f}/${S}`,\n            c,\n            S\n          );\n        });\n    }\n  }\n}, le = (t, n, o) => {\n  var r;\n  const e = Q(\n    t\n  );\n  if (e.sys && \"items\" in e) {\n    const s = e;\n    if (!((r = s.sys) != null && r.contentSourceMapsLookup))\n      return s;\n    const {\n      contentSourceMapsLookup: { fieldTypes: c, editorInterfaces: i }\n    } = s.sys, { items: u, includes: a } = s;\n    u.forEach(\n      (l) => $(l, c, i, n, o)\n    ), a && a.Entry && a.Entry.forEach(\n      (l) => $(l, c, i, n, o)\n    ), a && a.Asset && a.Asset.forEach(\n      (l) => $(l, c, i, n, o)\n    );\n  } else {\n    const s = e;\n    if (!s.sys.contentSourceMapsLookup)\n      return console.error(\"Content source maps lookup data is missing\"), s;\n    $(\n      s,\n      s.sys.contentSourceMapsLookup.fieldTypes,\n      s.sys.contentSourceMapsLookup.editorInterfaces,\n      n,\n      o\n    );\n  }\n  return e;\n};\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentful/content-source-maps/dist/index.js\n");

/***/ })

};
;